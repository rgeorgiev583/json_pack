defmodule MsgPackObjectTest do
    use ExUnit.Case
    doctest MsgPackObject

    test "basic test" do
        message = <<0x82, 0xa7, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0xc3, 0xa6, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x00>>
        object = %{"compact" => true, "schema" => 0}
        assert MsgPackObject.parse(message) |> MsgPackObject.get_bare_object == object
        assert MsgPackObject.serialize(object) == message
    end

    test "more advanced test" do
        message = <<0x87, 0xA5, 0x61, 0x72, 0x72, 0x61, 0x79, 0x92, 0xA3, 0x66, 0x6F, 0x6F, 0xA3, 0x62, 0x61, 0x72, 0xA7, 0x62, 0x6F, 0x6F, 0x6C, 0x65, 0x61, 0x6E, 0xC3, 0xA5, 0x66, 0x6C, 0x6F, 0x61, 0x74, 0xCB, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA3, 0x69, 0x6E, 0x74, 0x01, 0xA4, 0x6E, 0x75, 0x6C, 0x6C, 0xC0, 0xA6, 0x6F, 0x62, 0x6A, 0x65, 0x63, 0x74, 0x82, 0xA3, 0x62, 0x61, 0x7A, 0xCB, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA3, 0x66, 0x6F, 0x6F, 0x01, 0xA6, 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0xA7, 0x66, 0x6F, 0x6F, 0x20, 0x62, 0x61, 0x72>>
        object = %{
            "array" => [
                "foo",
                "bar"
            ],
            "boolean" => true,
            "float" => 0.5,
            "int" => 1,
            "null" => nil,
            "object" => %{
                "baz" => 0.5,
                "foo" => 1
            },
            "string" => "foo bar"
        }
        assert MsgPackObject.parse(message) |> MsgPackObject.get_bare_object == object
        assert MsgPackObject.serialize(object) == message
    end
end